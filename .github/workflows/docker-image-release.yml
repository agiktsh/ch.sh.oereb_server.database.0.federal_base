name: Build and push docker image

on:
  push:
    tags:
      - '**'
  workflow_dispatch:


jobs:

  build-and-push-docker-image:

    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    env:
      CONTAINERNAME: database
      SCHEMA: live
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      PG_READ_PWD: ${{ secrets.PG_READ_PWD }}
      PG_WRITE_PWD: ${{ secrets.PG_WRITE_PWD }}
      PG_GRETL_PWD: ${{ secrets.PG_GRETL_PWD }}
      ILI2PG_VERSION: 4.9.1

    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install ili2db
        run: |
          ./scripts/install_ili2pg.sh

      - name: Start database structure
        run: |
          ./scripts/start_target_db.sh
      - name: Insert PLZO data
        run: |
          ./scripts/insert_plzo_data.sh
      - name: Clear ILI Cache
        run: |
          docker exec $CONTAINERNAME rm -rf /root/.ilicache
      - name: Insert catalogue data
        run: |
          ./scripts/insert_catalogue_data.sh

      - name: Insert Federal Themes data
        run: |
          ./scripts/insert_federal_themes_data.sh

      - name: Shut down DB container
        run: |
          ./scripts/stop_target_db.sh

      - name: Build Image
        run: |
          docker commit $CONTAINERNAME ghcr.io/${{ github.repository }}:temp
          docker build -t ghcr.io/${{ github.repository }}:latest .
          docker tag ghcr.io/${{ github.repository }}:latest ghcr.io/${{ github.repository }}:${{ github.ref_name }}
      - name: Push image tags
        run: |
          docker push ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:${{ github.ref_name }}
      - name: Acknowledge parent repository about new base image
        run: |
          curl -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.PERSONAL_TOKEN }}" \
          --request POST \
          --data '{"event_type": "base_image_was_updated", "client_payload": {"build": "true"}}' \
          https://api.github.com/repos/openoereb/ch.sh.oereb_base/dispatches
